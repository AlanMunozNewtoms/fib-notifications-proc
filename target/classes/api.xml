<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:jirarest="http://www.mulesoft.org/schema/mule/jirarest" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/jirarest http://www.mulesoft.org/schema/mule/jirarest/current/mule-jirarest.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd">
   
<flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP" />
        <apikit:router config-ref="api-config" doc:name="APIkit Router" />
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="api-console">
        <http:listener config-ref="api-httpListenerConfig" path="/console/*" doc:name="HTTP" />
        <apikit:console config-ref="api-config" doc:name="APIkit Console" />
    </flow>
    <flow name="post:/notification:application/json:api-config">
        <dw:transform-message doc:name="Json to Java Object">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.query.params'.notificateBy  == &quot;Email&quot;]">
                <flow-ref name="send-email" doc:name="send-email"/>

            </when>
            <when expression="#[message.inboundProperties.'http.query.params'.notificateBy  == &quot;Sms&quot;]">
                <flow-ref name="send-sms" doc:name="send-sms"/>

            </when>
            <otherwise>
                <flow-ref name="send-both" doc:name="send-both"/>

            </otherwise>
        </choice>
    </flow>
    <flow name="CheckForUpdatedIssues">
        <poll doc:name="Poll">
            <fixed-frequency-scheduler frequency="${poll.frecuency}" timeUnit="SECONDS"/>
            <http:request config-ref="HTTP_Request_Configuration" path="/jira" method="GET" doc:name="HTTP: Get Issue updated">
                <http:request-builder>
                    <http:query-param paramName="status" value="${http.poll.request.status}"/>
                    <http:query-param paramName="userId" value="${http.poll.request.userId}"/>
                    <http:query-param paramName="timeAgo" value="${http.poll.request.timeAgo}"/>
                    <http:query-param paramName="issueType" value="${http.poll.request.issueType}"/>
                </http:request-builder>
            </http:request>
        </poll>
        <dw:transform-message doc:name="Transform Message" metadata:id="e48f3efe-1d7a-4acb-bd36-f334a40d67af">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	key: payload01.key,
	issuetype: payload01.fields.issuetype.name,
	updated: payload01.fields.updated,
	status: {
		name: payload01.fields.status.name
	}
})]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger: Poll response "/>

    </flow>
    <flow name="post:/ticket:api-config">
        <flow-ref name="post-ticket" doc:name="post-ticket"/>
    </flow>

    <flow name="get:/ticket/{id}:api-config">
        <flow-ref name="get-ticket" doc:name="get-ticket"/>

    </flow>

</mule>
